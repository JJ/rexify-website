% layout 'default';
% title 'An example of using INI-style group files with Rex';

% content_for header => begin
      <meta name="description" content="(R)?ex - manage all your boxes from a central point - Process Management">
      <meta name="keywords" content="INI, groups">
% end

         <h1>Use an INI-style groups file</h1>
         <p>To use a INI-style groups file you can use the <i>groups_file</i> function. It will read in the ini file you provide as a parameter, after which you can use it as if you defined groups as usual in your Rexfile.</p>

            <pre><code class="perl">use Rex -feature => [qw/use_server_auth/];
use Rex::Group::Lookup::INI;
groups_file "file.ini";</code></pre>

         <p>And this is an example of a INI-style groups file:</p>

            <pre><code class="perl">; my group file
[frontends]
fe01
fe02

fe03
fe04
fe05

# the backends
[backends]
be01
be02
;be03
be04

[db]
db[01..02]

[redis]
@backends
redis01
redis02

[memcache < redis]
memcache01
memcache02 user=root password=foob4r sudo=true services=apache,memcache</code></pre>

<p>This will create the following groups:</p>

<pre>frontends: fe01, fe02, fe03, fe04, fe05
backends: be01, be02, be04
db: db01, db02
redis: be01, be02, be04, redis01, redis02
memcache: be01, be02, be04, redis01, redis02, memcache01, memcache02
</pre>

<p>and memcache02 will use custom authentication and there will be a special option "services" for this server that can be queried like this:</p>

<pre><code class="perl">task "mytask", group => "memcache", sub {
  say connection->server->option("services");
};
</pre>
