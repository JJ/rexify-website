% layout 'default';
% title 'Use Boxes with any Box Provider';

% content_for header => begin
      <meta name="description" content="Howto work with Rex/Boxes">
      <meta name="keywords" content="Rex, Boxes, Amazon, VirtualBox">
% end

<h1>Working with Rex/Boxes</h1>

<p>Since Rex 0.38 it is possible to descripe your Rex/Boxes with an external YAML file. So it is possible to use your Rexfile with all supported Box providers.</p>

<p>It means that you don't need to change your Rexfile if you want to switch for example from VirtualBox-Boxes to Amazon-Boxes.</p>
<div class="small-vspace"></div>

<div class="vspace"></div>

<h1>The YAML file</h1>

<p>The YAML file describes the boxes you want to create. Every Provider can have own options, so please check the API documentation for more information.</p>

<div class="vspace"></div>
<h2>VirtualBox Example</h2>
<p>In the following box you'll see an example Box file for VirtualBox.</p>

<div class="black-box">
   <pre class="bash">type: VBox
vms:
   fe01:
      url: http://box.rexify.org/box/ubuntu-server-12.10-amd64.ova
      network:
         1:
            type: bridged
            bridge: eth0
      setup: setup_frontend
   db01:
      url: http://box.rexify.org/box/ubuntu-server-12.10-amd64.ova
      network:
         1:
            type: bridged
            bridge: eth0
      setup: setup_db</pre>
</div>


<div class="small-vspace"></div>
<p>This YAML file will create 2 VirtualBox VMs. One named &raquo;fe01&laquo; and one named &raquo;db01&laquo;. Also it will download the VM Base-Box from &raquo;http://box.rexify.org/box/ubuntu-server-12.10-amd64.ova&laquo;.</p>
<div class="small-vspace"></div>

<p>For the network setting it will create a bridged adapter and use &raquo;eth0&laquo; for the bridge device.</p>
<div class="small-vspace"></div>
<p>After the VM is created and started it will run the setup tasks given by &raquo;setup&laquo;.</p>


<div class="vspace"></div>

<h2>Amazon Example</h2>

<p>In the following box you'll see an example Box file for Amazon.</p>
<div class="black-box">
   <pre class="bash">type: Amazon
amazon:
   access_key: {{access-key}}
   private_access_key: {{private-access-key}}
   region: ec2.eu-west-1.amazonaws.com
   zone: eu-west-1a
   auth_key: example
vms:
   fe01:
      ami: ami-c1aaabb5
      type: m1.large
      security_group: default
      setup: setup_frontend
   db01:
      ami: ami-c1aaabb5
      type: m1.large
      security_group: default
      setup: setup_db</pre>
</div>

<div class="small-vspace"></div>
<p>This YAML file will create 2 Amazon VMs with the given AMI-ID (ami-c1aaabb5).</p>
<div class="small-vspace"></div>

<p>Notice the extra section <i>amazon</i> in this file. For some Box Providers you need to define some extra settings. You'll find more information in the API documentation of the Box Provider.</p>

<div class="small-vspace"></div>

<p>To use one of these files you have to add it to the <i>use Rex::Commands::Box</i> command in your Rexfile.</p>

<div class="black-box">
   <pre class="perl">use Rex::Commands::Box init_file =&gt; "box.yml";</pre>
</div>

<div class="small-vspace"></div>

<div class="vspace"></div>
<h1>The Rexfile</h1>

<p>To use the YAML file you need to create a Rexfile with the deployment logic.</p>

<div class="small-vspace"></div>

<div class="black-box">
   <pre class="perl">use Rex::Commands::Box init_file =&gt; "box.yml";

group myboxes =&gt; map { get_box($_-&gt;{name})-&gt;{ip} } list_boxes;

task "box", sub {
   boxes "init";
};</pre>
</div>

<div class="small-vspace"></div>

<p>With the <i>list_boxes</i> command you can get an array of all your boxes. Every element in the array will be a hash reference containing information of the box that can be queried even if the Box is halted.</p>

<div class="small-vspace"></div>

<p>To get the IP of a box you can do this with the <i>get_box($name)</i> command. This command will start the Box and return all information that can be gathered. See <a href="/api/Rex/Commands/Gather.pm.html">get_system_information()</a> for more information.</p>

<div class="small-vspace"></div>
<p>The gathered information will be cached in the file <i>.box.cache</i> so it won't need to query it every time.</p>

<div class="small-vspace"></div>

<p>The command <i>boxes "init";</i> will do the heavy lifting. It will iterate over every box described in the YAML file create and start it.</p>

<div class="vspace"></div>

<p>To start or stop boxes you can use the following commands.</p>

<div class="black-box">
   <pre class="perl">task "stop_boxes", sub {
   boxes stop =&gt; qw/box1 box2/;
};

task "start_boxes", sub {
   boxes start =&gt; qw/box1 box2/;
};</pre>
</div>


