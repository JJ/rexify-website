% layout 'default';
% title '';

% content_for header => begin
      <meta name="description" content="This is a Rex/Boxes module to use VirtualBox VMs.">
      <meta name="keywords" content="Rex, API, Documentation">
% end 


<!-- INDEX BEGIN -->
<div name="index">
<h1>TABLE OF CONTENTS</h1>

<ul>

	<li><a href="#description">DESCRIPTION</a></li>
	<li><a href="#examples">EXAMPLES</a></li>
	<li><a href="#headless_mode">HEADLESS MODE</a></li>
	<li><a href="#methods">METHODS</a></li>
</ul>


</div>
<!-- INDEX END -->

<p>
</p>
<h2>DESCRIPTION</h2>
<p>This is a Rex/Boxes module to use VirtualBox VMs.</p>
<p>
</p>

<h2>EXAMPLES</h2>
<p>To use this module inside your Rexfile you can use the following commands.</p>
<pre><code class="perl">
 use Rex::Commands::Box;
 set box =&gt; "VBox";
  
 task "prepare_box", sub {
   box {
     my ($box) = @_;
       
     $box-&gt;name("mybox");
     $box-&gt;url("http://box.rexify.org/box/ubuntu-server-12.10-amd64.ova");
       
     $box-&gt;network(1 =&gt; {
       type =&gt; "nat",
     });
       
     $box-&gt;network(1 =&gt; {
       type =&gt; "bridged",
       bridge =&gt; "eth0",
     });
        
     $box-&gt;forward_port(ssh =&gt; [2222, 22]);
       
     $box-&gt;share_folder(myhome =&gt; "/home/myuser");
        
     $box-&gt;auth(
       user =&gt; "root",
       password =&gt; "box",
     );
        
     $box-&gt;setup("setup_task");
   };
 };</code></pre>
<p>If you want to use a YAML file you can use the following template.</p>
<pre><code class="perl">
 type: VBox
 vms:
   vmone:
     url: <a href="http://box.rexify.org/box/ubuntu-server-12.10-amd64.ova">http://box.rexify.org/box/ubuntu-server-12.10-amd64.ova</a>
     forward_port:
       ssh:
         - 2222
         - 22
     share_folder:
       myhome: /home/myhome
     setup: setup_task</code></pre>
<p>And then you can use it the following way in your Rexfile.</p>
<pre><code class="perl">
 use Rex::Commands::Box init_file =&gt; "file.yml";
   
 task "prepare_vms", sub {
   boxes "init";
 };</code></pre>
<p>
</p>

<h2>HEADLESS MODE</h2>
<p>It is also possible to run VirtualBox in headless mode. This only works on Linux and MacOS. If you want to do this you can use the following option at the top of your <em>Rexfile</em>.</p>
<pre><code class="perl">
 set box_options =&gt; { headless =&gt; TRUE };</code></pre>
<p>
</p>

<h2>METHODS</h2>
<p>See also the Methods of Rex::Box::Base. This module inherits all methods of it.</p>
<ul>
<li><strong>new(name =&gt; $vmname)</strong></li>


<p>Constructor if used in OO mode.</p>
<pre><code class="perl">
 my $box = Rex::Box::VBox-&gt;new(name =&gt; "vmname");</code></pre>

<li><strong>forward_port(%option)</strong></li>


<p>Set ports to be forwarded to the VM. This only work with VirtualBox in NAT network mode.</p>
<pre><code class="perl">
 $box-&gt;forward_port(
   name =&gt; [$from_host_port, $to_vm_port],
   name2 =&gt; [$from_host_port_2, $to_vm_port_2],
   ...
 );</code></pre>

<li><strong>share_folder(%option)</strong></li>


<p>Creates a shared folder inside the VM with the content from a folder from the Host machine. This only works with VirtualBox.</p>
<pre><code class="perl">
 $box-&gt;share_folder(
   name =&gt; "/path/on/host",
   name2 =&gt; "/path_2/on/host",
 );</code></pre>

<li><strong>info</strong></li>


<p>Returns a hashRef of vm information.</p>

<li><strong>ip</strong></li>


<p>This method return the ip of a vm on which the ssh daemon is listening.</p>

</ul>




