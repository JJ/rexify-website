% layout 'default';
% title '(R)?ex - A simple framework to simplify systemadministration and datacenter automation';


<div style="float: left"> <!-- needed for bootstrap ... -->
<div class="row-fluid">
   <div class="span4">
      <h2>Why use Rex?</h2>
      <p>If you have to do a task more than once,
automate it!</p>
      <p>Don‘t forget an installation step anymore. Automation reduces the risk of failure and let you do your real work.</p>
   </div><!--/span-->
   <div class="span4">
      <h2>Advantages</h2>
      <ul class="no-list">
         <li>uses ssh, no agent required</li>
         <li>seamless integration, no conflicts</li>
         <li>easy to use and to extend</li>
         <li>easy to learn, it‘s just plain perl</li>
      </ul>
   </div><!--/span-->
   <div class="span4">
      <h2>Open Source</h2>
      <p>We believe in the idea of open source. So Rex and all its parts are released under Apache 2.0 license.</p>
      <p>You‘re invited to join the community to make Rex better and better.</p>
   </div><!--/span-->
</div><!--/row-->

<div class="row-fluid">
   <div class="span4">
      <!-- <p><a class="btn" href="#">View details &raquo;</a></p> -->
   </div><!--/span-->
   <div class="span4">
      <p><a class="btn" href="/howtos/perl.html">Just enough Perl for Rex &raquo;</a></p>
   </div><!--/span-->
   <div class="span4">
      <p><a class="btn" href="/contribute">View details &raquo;</a></p>
   </div><!--/span-->
</div><!--/row-->
</div>

<h2>Uptime?</h2>
<p>This command line example will execute "uptime" on all the given hosts (frontend01, frontend02, ...).</p>
<pre><code class="bash">$ rex -H "frontend[01..15] middleware[01..05] db[01..04]" -e "say run 'uptime'"
</code></pre>

<p>The same, but with a <i>Rexfile</i></p>
<pre><code class="perl">desc "Get Disk Free";
task "disk_free", sub {
   my $output = run "df -h";
   say $output;
};
</code></pre>

<p>Now you can run your Task with this command</p>
<pre><code class="bash">$ rex -H "frontend[01..15] middleware[01..05] db[01..04]" disk_free
</code></pre>


<h2>Keep Your Configuration In Sync</h2>
<p>This example will install the Apache Webserver on 5 servers and keep the configuration in sync. If the configuration file was changed it will automatically reload apache.</p>
<p>If this task gets executed against a virgin host (where no apache is installed) it will first install it.</p>

<pre><code class="perl">user "root";
group "frontend" =&gt; "frontend[01..05]";

desc "Prepare Frontend Server";
task "prepare", group =&gt; "frontend", sub {
   install "apache2";
};

desc "Keep Configuration in sync";
task "configure", group =&gt; "frontend", sub {
   prepare();

   file "/etc/apache2/apache2.conf",
        source    =&gt; "files/etc/apache2/apache2.conf",
        on_change =&gt; sub { service apache2 =&gt; "reload"; };
};
</code></pre>

<h2>Running under sudo?</h2>
<p>You can also run everything with sudo. Just define the sudo password and activate sudo.</p>
<pre><code class="perl">user "ubuntu";
group "frontend" =&gt; "frontend[01..05]";
sudo TRUE;

desc "Prepare Frontend Server";
task "prepare", group =&gt; "frontend", sub {
   install "apache2";
};

desc "Keep Configuration in sync";
task "configure", group =&gt; "frontend", sub {
   prepare();

   file "/etc/apache2/apache2.conf",
        source    =&gt; "files/etc/apache2/apache2.conf",
        on_change =&gt; sub { service apache2 =&gt; "reload"; };
};
</code></pre>


